@import 'variables';
@import '../../shared/css/mixins/import';

@mixin text-shadow {
    text-shadow: 2px 2px 2px $text-shadow;
}

@mixin mirror {
    transform: scale3d(-1, 1, 1);
}

@mixin nav-button($column, $width: 0, $height: 0) {
    @include sprite($sprite + 'sprite.mainnav.png', 888px, 200px, 5, 2, $column, 1, 2, $width, $height);
}

@mixin yesno-button($column, $width: 0, $height: 0) {
    @include sprite($sprite + 'sprite.yesno.png', 215px, 220px, 2, 2, $column, 1, 2, $width, $height);
}

@mixin bin-button($width: 0, $height: 0) {
    @include sprite($sprite + 'sprite.btn.png', 215px, 220px, 1, 2, 1, 1, 2, $width, $height);
}

@mixin star-sprite($row, $width: 0, $height: 0) {
    @include sprite($sprite + 'sprite.yesno.png', 91px, 186px, 1, 2, 1, $row, $row, $width, $height);
}

@mixin bin-sprite($column, $width: 0, $height: 0) {
    @include sprite($sprite + 'sprite.bins.png', 850px, 195px, 5, 1, $column, 1, 1, $width, $height);
}

@mixin flip-sprite($column, $row, $width: 0, $height: 0) {
    @include sprite($sprite + 'flips.png', 850px, 300px, 6, 2, $column, $row, $row, $width, $height);
}

@mixin truck-sprite($column, $width: 0, $height: 0) {
    @include sprite($sprite + 'dumptruck.png', 758px, 191px, 3, 1, $column, 1, 1, $width, $height);
}

@mixin vertical-score-meter($steps: 4, $meter-color: $black) {
    display: inline-block;
    position: relative;
    z-index: 1;
    margin: 10px;
    width: 17px;
    height: 160px;
    vertical-align: middle;

    &::after {
        position: absolute;
        top: 5%;
        right: 3px;
        opacity: .6;
        z-index: 1;
        border-radius: 10px;
        background-color: $white;
        width: 5px;
        height: 90%;
        content: '';
    }

    span {
        @include cover;
        display: block;
        color: transparent;
        font-size: 0;

        &::before,
        &::after {
            display: block;
            position: absolute;
            // border-radius: 50px 50px 0 0;
            border-radius: 50px;
            width: 100%;
            content: '';
        }

        &::before {
            bottom: 0;
            left: 0;
            background-color: $white;
            height: 100%;
        }

        &::after {
            bottom: 0;
            left: 0;

            // scss-lint:disable VendorPrefix
            -webkit-transition: height .5s cubic-bezier(.53, 0, .63, 1);
            // scss-lint:enable VendorPrefix
            transition: height .5s cubic-bezier(.53, -.56, .63, 1.74);

            background: $meter-color;
            background-repeat: no-repeat;
            background-size: cover;

            height: 0;
        }
    }

    @for $i from 0 through $steps {
        &.score-#{$i} {
            span::after {
                height: percentage($i / $steps);
            }
        }
    }
}

@mixin game-gages {
    .top-left {
        @include position(absolute, 0 null null 0);
        z-index: 3;

        > div {
            display: inline-block;
            border: 2px solid $black;
            padding: 20px 0;
            width: 100px;
        }
    }

    .item-name {
        @include position(absolute, 0 0 null null);
        z-index: 3;
        border: 2px solid $black;
        padding: 20px 0;
        width: 200px;
        height: 64px;
    }

    .life {
        @include vertical-score-meter(-5);
        @include center;
        right: 0;
        left: auto;
        z-index: 3;

        span {
            &::before {
                background-color: $green;
            }
        }
    }
}

@mixin game-reveal {
    .reveal {
        li {
            width: 100%;
            height: 100%;

            $names: resort retry complete;
            $colors: $transparent-red $transparent-red $transparent-green;
            @for $i from 1 through length($names) {
                &[data-ref=#{nth($names, $i)}] {
                    background-color: #{nth($colors, $i)};
                }
            }
        }

        &.open-retry,
        &.open-complete {
            .close-reveal {
                @include position(absolute, null 150px 150px null);
            }
        }
    }
}

@mixin master-sorter-tray-item {
    $tops:  25 25 25 70 70;
    $lefts: 20 50 80 30 70;
    @for $i from 1 through length($tops) {
        &:nth-of-type(#{$i}) {
            top: percentage(nth($tops, $i) / 100);
            left: percentage(nth($lefts, $i) / 100);
        }
    }
}

@mixin master-sorter-tray {
    $lefts: 35 150;
    @for $i from 1 through length($lefts) {
        &:nth-of-type(#{$i}) {
            left: percentage(nth($lefts, $i) / 100);
        }
    }

    $bins:  LIQUIDS FOOD-SHARE   RECYCLE  LANDFILL   COMPOST TRAY-STACKING HOME;
    $tops:       70       -250      -250      -250      -250          -250  500;
    $lefts:     -15       -205       -15       180       375           565  210;
    @for $i from 1 through length($bins) {
        &.#{nth($bins, $i)} {
            top: #{nth($tops, $i)}px;
            left: #{nth($lefts, $i)}px;
            transform: scale(.5) translateX(-50%) translateY(-50%);
            transition: top .25s .25s, left .25s 0s, transform .5s;
        }
    }
}

@mixin master-sorter-catchable {
    @include center;
    @include size(60px);
    transition: top .25s 0s, left .25s .25s, transform .5s;
    background-color: $green;

    &::before {
        font-size: 10px;
        content: attr(data-message);
    }

    $bins:  LIQUIDS FOOD-SHARE   RECYCLE  LANDFILL   COMPOST TRAY-STACKING;
    $tops:       50       -250      -250      -250      -250          -250;
    $lefts:    -120       -270       -80       110       310           500;
    @for $i from 1 through length($bins) {
        &.#{nth($bins, $i)} {
            top: #{nth($tops, $i)}px;
            left: #{nth($lefts, $i)}px;
            transition: top .25s .25s, left .25s 0s, transform .5s;
        }
    }

    &.CAUGHT {
        display: none;
    }

    &.POUR {
        animation: master-pour 1s;
    }
}
